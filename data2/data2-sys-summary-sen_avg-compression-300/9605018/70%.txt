 The efficiency of LR(k) parsing techniques is very attractive from the perspective of natural language processing applications This has stimulated the computational linguistics community to develop extensions of these techniques to general context-free grammar parsingOur grammar transformation produces a so called cover for the input grammar, which together with the filtering condition fully captures the specification of the method, abstracting away from algorithmic details such as data structures and control flow the number of parsesfound by the algorithm for any input, is reduced to exactly that of the source grammarThe following characterization relates the automaton and Algorithm applied to the 2LR coverThe above characterization, whose proof is not reported here,is the justification for calling the resulting algorithm tabular LR parsing In particular, fora grammar for which is deterministic, i for anLR(0) grammar, the number of steps performed by andthe number of steps performed by the above algorithm are exactly the sameThis is very attractive from an application-oriented perspective,since many actual systems for natural language processing are based on these kinds of parsing algorithmThe entries in the table represent single stack elements, as opposed topairs of stack elements following and  We have performed some experiments with Algorithm applied to and ,for 4 practical context-free grammarsThe first grammar generates a subset of the programming language ALGOL 68  The second and third grammars generate a fragment of Dutch, and are referred to as the CORRie grammar and the Deltra grammar , respectively The fourth grammar, referred to as the Alvey grammar , generates a fragment of English and wasautomatically generated from a unification-based grammar the number of elements storedin the parse table and the number of elementary stepsperformed by the algorithm Table presents the costs of parsing the test sentences An elementary step consists of the derivation of one elementin or from one or two other elementsWe then count two parsing steps, one for q1 and one for q2Our treatment of tabular LR parsing has two important advantages overthe one by Tomita: It is conceptually simpler, because we make use of simpleconcepts such as a grammar transformation and the well-understoodCYK algorithm, instead of a complicated mechanism working on graph-structured stacksOur algorithm requires fewer LR statesThe conceptual simplicity of our formulation of tabularLR parsing allows comparison with other tabular parsing techniques,such as Earley's algorithm and tabular left-corner parsing , based on implementation-independent criteria by which treated tabular LR parsing differently from the othertechniquesThe tabular realisation of the former automata isvery close to a variant of Tomita's algorithm by  Parsing algorithms that are not based on the LR techniquehave however been left out of consideration, and sowere techniques for unification grammars and techniques incorporatingfinite-state processesTheoretical considerations have suggested that for natural language parsing, LR-based techniques may notnecessarily be superior to other parsing techniques, althoughconvincing empirical data to this effect has never been shownThis issue is difficult to resolve because so much of the relative efficiency of the different parsing techniques dependson particular grammars and particular input, as well ason particular implementations of the techniquesWe assume that the reader is familiar with context-free grammar parsing theory  A context-free grammar is a 4-tuple ,where and are two finite disjoint sets of terminal and nonterminal symbols, respectively, is the start symbol, and P is a finite set of rulesWe generally use symbols to range over ,symbols to range over ,symbols X, Y, Z to range over ,symbols to range over ,and symbols to range over A pushdown automaton is a 5-tuple,where ,and T are finite sets of input symbols, stack symbolsand transitions, respectively;is the initial stack symbol andis the final stack symbolWe generally use symbols to range over ,andthe symbol to range over  Despite appearances, the graph-structured stacks used to describe Tomita's algorithm differ very little from parse tables, or in other words,generalized LR parsing is one of theso calledtabular parsing algorithms, among which also the CYK algorithm and Earley's algorithm can be foundConsider a fixed input string  (Tabular parsing is also known as chart parsing In this paper we investigate the extension of LR parsing to general context-free grammars from a more general viewpoint: tabularalgorithms can often be described by the compositionof two constructionsWe make use of the augmented grammar introduced in Section The set can be exponential in the size of the grammar Another example, on which our presentation is based, was firstsuggested by : a grammar is first transformedand then a standard tabular algorithm along with some filtering condition is appliedusing the transformed grammarObserve that these steps involve the new stack symbolsthat are distinguishable from possible stack symbols In our case, the transformationand the subsequent application of the tabular algorithm result in a new formof tabular LR parsingAs stack symbols, we take the elements from and a subsetof elements from :In a stack symbol of the form (X, q the X serves to record the grammar symbolthat has been recognized last, cfOur method is more efficient than Tomita's algorithm in two respects Following the general approach presented by , we simulate computations of these devices using a tabular method, a grammar transformation and a filteringfunctionWe make use of a tabular parsing algorithm which is basically an asynchronous version of the CYK algorithm, as presented by , extended to productions of the forms and and with a left-to-right filtering condition The algorithm uses a parse table consisting in a 0-indexed square array UThis process makes use of a function fromto ,specific to a certaincontext-free grammarWe are now ready to give a formal specification of the tabular algorithmWe now specify a grammar transformation, based on the definition of 