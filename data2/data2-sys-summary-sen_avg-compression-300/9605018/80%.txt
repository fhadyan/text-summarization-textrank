 This has stimulated the computational linguistics community to develop extensions of these techniques to general context-free grammar parsing the number of parsesfound by the algorithm for any input, is reduced to exactly that of the source grammarThe following characterization relates the automaton and Algorithm applied to the 2LR coverThe above characterization, whose proof is not reported here,is the justification for calling the resulting algorithm tabular LR parsing In particular, fora grammar for which is deterministic, iThe entries in the table represent single stack elements, as opposed topairs of stack elements following and  The fourth grammar, referred to as the Alvey grammar , generates a fragment of English and wasautomatically generated from a unification-based grammar the number of elements storedin the parse table and the number of elementary stepsperformed by the algorithm Table presents the costs of parsing the test sentencesWe then count two parsing steps, one for q1 and one for q2Our treatment of tabular LR parsing has two important advantages overthe one by Tomita: It is conceptually simpler, because we make use of simpleconcepts such as a grammar transformation and the well-understoodCYK algorithm, instead of a complicated mechanism working on graph-structured stacksOur algorithm requires fewer LR statesThe conceptual simplicity of our formulation of tabularLR parsing allows comparison with other tabular parsing techniques,such as Earley's algorithm and tabular left-corner parsing , based on implementation-independent criteria by which treated tabular LR parsing differently from the othertechniquesThe tabular realisation of the former automata isvery close to a variant of Tomita's algorithm by Theoretical considerations have suggested that for natural language parsing, LR-based techniques may notnecessarily be superior to other parsing techniques, althoughconvincing empirical data to this effect has never been shownThis issue is difficult to resolve because so much of the relative efficiency of the different parsing techniques dependson particular grammars and particular input, as well ason particular implementations of the techniquesWe assume that the reader is familiar with context-free grammar parsing theory We generally use symbols to range over ,symbols to range over ,symbols X, Y, Z to range over ,symbols to range over ,and symbols to range over A pushdown automaton is a 5-tuple,where ,and T are finite sets of input symbols, stack symbolsand transitions, respectively;is the initial stack symbol andis the final stack symbolWe generally use symbols to range over ,andthe symbol to range over  Despite appearances, the graph-structured stacks used to describe Tomita's algorithm differ very little from parse tables, or in other words,generalized LR parsing is one of theso calledtabular parsing algorithms, among which also the CYK algorithm and Earley's algorithm can be foundConsider a fixed input string  (Tabular parsing is also known as chart parsing In this paper we investigate the extension of LR parsing to general context-free grammars from a more general viewpoint: tabularalgorithms can often be described by the compositionof two constructionsWe make use of the augmented grammar introduced in Section Another example, on which our presentation is based, was firstsuggested by : a grammar is first transformedand then a standard tabular algorithm along with some filtering condition is appliedusing the transformed grammarObserve that these steps involve the new stack symbolsthat are distinguishable from possible stack symbols In our case, the transformationand the subsequent application of the tabular algorithm result in a new formof tabular LR parsingandtogether imply Our method is more efficient than Tomita's algorithm in two respectsWe make use of a tabular parsing algorithm which is basically an asynchronous version of the CYK algorithm, as presented by , extended to productions of the forms and and with a left-to-right filtering conditionThis process makes use of a function fromto ,specific to a certaincontext-free grammarWe are now ready to give a formal specification of the tabular algorithm