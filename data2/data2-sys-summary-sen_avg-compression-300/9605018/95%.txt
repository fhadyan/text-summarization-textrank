The entries in the table represent single stack elements, as opposed topairs of stack elements following and We then count two parsing steps, one for q1 and one for q2Our algorithm requires fewer LR statesThe conceptual simplicity of our formulation of tabularLR parsing allows comparison with other tabular parsing techniques,such as Earley's algorithm and tabular left-corner parsing , based on implementation-independent criteria by which treated tabular LR parsing differently from the othertechniquesWe assume that the reader is familiar with context-free grammar parsing theory A pushdown automaton is a 5-tuple,where ,and T are finite sets of input symbols, stack symbolsand transitions, respectively;is the initial stack symbol andis the final stack symbolWe make use of the augmented grammar introduced in Section  In our case, the transformationand the subsequent application of the tabular algorithm result in a new formof tabular LR parsingOur method is more efficient than Tomita's algorithm in two respects