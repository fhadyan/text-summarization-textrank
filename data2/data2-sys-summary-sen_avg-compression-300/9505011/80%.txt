 An ideal scheme used to evaluate semantic classes should be able to handle overlapping classes (as opposed to partitions) as well as hierarchies Since a word can occur in more than one class, it is important to find some kind of mapping between the classes generated by the system and the classes given by the expert For example, suppose that Class A is generated by the system and Class B is provided by an expert (as shown in Table 1  The contingency table obtained for this pair of classes is shown in Table 2e classifying a set of words into several potentially overlapping classes The classes produced by a system are later compared to these correct classifications provided by the expert In order to determine pairwise mappings between the clustering generated by the system and one provided by an expert, a table of F-measures is constructed, with a row for each class generated by the system, and a column for every class provided by the expert This table gives an estimate of how well each class generated by the system maps to the ones provided by the expert In general, conflicts arise when more than one class generated by the system maps to a given class provided by the expert To resolve a conflict, one of the system classes must be re-mapped Since semantic classes are often domain-specific, their automatic acquisition is not trivial Rather than populating separate contingency tables for every pair of classes, construct a single contingency table Once all the mapped classes have been incorporated into this contingency table, add every element of all unmapped classes generated by the system to the YES-NO cell and every element of all unmapped classes provided by the expert to the NO-YES cell of this table Three experts were used to evaluate the generated noun clusters The results obtained by comparing these noun classes to the clusterings provided by three different experts are shown in Table 3 This paper concentrates on the aspect of evaluating the obtained clusters against classes provided by human experts