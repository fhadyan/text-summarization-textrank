 The second is that the nonmonotonic unification operation used is order independent Compared with Reiter's default logic, our notion of nonmonotonic sorts corresponds to default theories One difference is that nonmonotonic sorts allow that the application of a nonmonotonic rule leads to fail, i The two following examples will illustrate the difference between nonmonotonic rules giving multiple extensions and nonmonotonic rules giving a single explanation fail Note that even though there is an order dependency on the application order of nonmonotonic rules this does not affect the order independency on nonmonotonic unification between application of nonmonotonic rules Considering unification of nonmonotonic sorts it is not necessary to simplify the nonmonotonic part of the resulting sort As stated previously, nonmonotonic sorts allow multiple explanations of a nonmonotonic sort These requirements can be both structures in the subsumption order and nonmonotonic rules As seen by the definition a nonmonotonic sort is considered to be a pair of monotonic information from the subsumption order and nonmonotonic information represented as a set of nonmonotonic rules The user can assign nonmonotonic information to a nonmonotonic sort by calling a nonmonotonic definition as defined in the previous section When using nonmonotonic sorts containing nonmonotonic rules, we also need to know how to merge the monotonic and nonmonotonic information within the sort