 To show this, consider the test-rewrite sequence for Example : Test: dog barked the brown big Rewrite: barked the dog brown big Test: barked (the dog) brown big Rewrite: (the dog) barked brown big Test: the dog) barked) brown big Rewrite: the brown dog barked big Test: the (brown dog barked) big Rewrite: the big (brown dog) barked Test: the (big (brown dog barked) (terminate) In this sequence double underscore indicates the starting position of a moved constituent; the moved constituent itself is given in bold face; the bracketing indicates analysed constituents (for expository purposes the algorithm has been oversimplified, but the general idea remains the same  Take the following bag: Ex Outer domains are defined as follow: Definition 3 { (Sign,Lex,Binds) Sign , Lex and there exists a derivation Sign' Lex' or Lex' Sign' , and Sign' a unifier for Sign, Lex' a unifier for Lex, and Binds the set of all path pairs [SignPath,LexPath] such that Sign SignPath is token identical with Lex LexPath} Intuitively, the outer domains indicate that preterminal category Lex can appear in a complete sentence with subconstituent Sign, such that Lex is not a leaf of Sign Outer domains thus represent elements which may lie outside a subtree of category Sign in a complete sentential derivation The following definition specifies how outer domains are used: Definition 4 A lexical sign Lex' is in the outer domain of Sign' iff there is a triple (Sign,Lex,Binds) in outer domains such that Sign and Lex unify with Sign' and Lex' respectively, and there is at least one pair [PathS,PathL] Binds such that Sign PathS unifies with Lex PathL