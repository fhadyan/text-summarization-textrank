 Tagsets used in existing corpora have usually been designed to satisfy the needs of specific projects As well, users of these tools will find it easier to work with a corpus tagged in a standardised tagset Now, they have to memorize only one scheme of tag classes (class names, class semantics, exceptions as opposed to several schemes for several corpora before We also know of current work at Leeds University on mapping tagsets, though this work is concerned with the mapping of syntactic structure encoded in corpora  The tool described in this paper performs tagset mapping with manually written rules to introduce a standardised morphosyntactic tagset As a formal grammar is used to define syntactically well-formed specifications of word forms, we can regard our standard tagset as a specification language The type relations are divided into hierarchical (POS) features and non-hierarchical features (MO/SY  Mapping tags of an existing, flat-labeled tagset or source annotation scheme to tags of a specification language (target annotation scheme) is an instance of the retagging problem In the latter case, the physical tagset makes finer distinctions than the target annotation scheme This case introduces no problem for the mapping itself even if not all information contained in the corpus can be accessed Unfortunately, what we usually find in the mapping business is a mixture of two more problematic cases: The physical tagset cannot support a distinction intended by the specification language, e as the distinction gender in fig In the example case, the source annotation scheme includes special indefinite pronouns like anybody into the normal common nouns, whereas some word forms (color) are (wrongly tagged as adjectives in the source annotation scheme but as common nouns in the target annotation scheme We opted for symbolic mapping rules and designed two kinds of mapping rules to deal with the discrepancies indicated above Class coverage rules describe a correspondence of source and target annotation classes The rule format is as follows: for each physical tag, the equivalent expression in the specification language is named The word forms that are annotated with the physical tag NN are common singular nouns or mass nouns in the terms of the specification language their standard mapping can be overridden in fig The exception lexicon lookup takes place after the mapping of the class coverages After the compilation of the mapping rules, the system keeps the information in a data structure called an MTree (mapping tree see fig There is an MTree for each physical tagset regarded Warnings are issued in case of one of the following inconsistencies which might occur during the construction of an MTree: definition holes: Either target or source annotation schemes are not covered by a mapping rule (classes have been forgotten by the person writing the mapping rules  nondisjunctiveness of classes: A target annotation class has several source annotation correspondences In fig With a standardised tagset, linguistic information from different corpora of the same language can be reused and thus merged into a large data base System support includes Compilation of the tagset definition: useful for tagsets with many non-hierarchical, i combinatory features (which would have to be multiplied out manually otherwise Compilation of mapping rules: consistency checks (cf section  Interpretation of specifications: Each specification is syntactically and semantically checked, and the corresponding (set of) physical tag(s) is computed, using the MTree information Noisy word classes can be deduced from the MTree: In the MTree given in fig For test purposes, we wrote mapping rules for the UPenn and SUSANNE tagsets Information input are tagging guidelines, if the source annotation scheme comes with a comprehensive description of the intended class semantics, or corpus queries otherwise, which is more time consuming