 Here we will work upto the rules gradually, by considering which kinds of rules we might need in particular instances from X/s to X Now consider individual transitions The rule required is similar to Function Composition in CG i This is relatively trivial using a non-curried notation similar to that used for AACG Now consider the first transition State-Application and State-Prediction together provide the basis of a sound and complete parser As an example, reconsider the string John likes Sue an np s State-Application can apply, as in Figure 2 as np or np  The second of these is perhaps the most interesting, and is given in Figure 3 However, if we are to base a parser on the rules given above, it would seem that we gain further However there is a major problem A more appealing alternative is to base the tuning on statistical methods It is therefore necessary to make various generalisations over the states, for example by ignoring the R2 lists The paper has presented a method for providing interpretations word by word for basic Categorial Grammar (R( x The third allows there to be a verb phrase modifier Mary thinks John coming here was a mistake 1983  The second is to provide a basis for a semantic representation The second role can be captured by the parser constructing semantic representations directly 1994  Applicative Categorial Grammars allow categories to have arguments which are themselves functions (e very can be treated as a function of a function, and given the type (n/n n/n) when used as an adjectival modifier  This will be discussed in the final section of the paper Although it is still used for linguistic description (e The first directed Applicative CG was proposed by Bar-Hillel (1953  Functional types included a list of arguments to the left, and a list of arguments to the right The only real difference is that Bar-Hillel allowed arguments to themselves be functions a relative clause 1990  Using the non-Curried notation of Bar-Hillel, it is more natural to use a separate wh-list than to mark wh-arguments individually 1985) and HPSG, where wh-arguments are treated using slash mechanisms or feature inheritance principles which correspond closely to function composition If X is a syntactic type, and L and R are lists of categories, then is a category a stack of categories, or a chart) can be transformed by the next word into a new state There are two unusual features