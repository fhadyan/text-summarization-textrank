 The approach allows efficient bidirectional processing with similar generation and parsing times The phrase structure rule that describes this construction is Though a head-driven generator must generate first the head of the rule, nothing prescribes the order of generation of the complements of the head Clearly then, the order of evaluation of the complements in a rule can profoundly influence the efficiency of generation, and an efficient head-driven generator must order the evaluation of the complements in a rule accordingly Structure sharing determines the dataflow within the rules of the grammar The relative efficiency of this evaluation leads our compiler to as the optimal evaluation order of our phrase structure rule for argument composition The optimal evaluation order for a phrase structure rule need not necessarily be head-first If the evaluation of the head of a rule introduces much nondeterminacy or provides insufficient restricting information for the evaluation of its complements, our dataflow analysis might not select the head as the first category to be evaluated, and choose instead as the optimal evaluation order