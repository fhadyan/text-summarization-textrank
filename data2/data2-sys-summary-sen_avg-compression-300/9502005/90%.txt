 This causes the rejection of all possible evaluation orders for this rule, as the evaluation of an unrestricted nonverbal complement clearly exceeds the allowed maximal degree of nondeterminacy of the grammar The approach allows efficient bidirectional processing with similar generation and parsing times Gerdemann's generator follows a head-driven strategy in order to avoid inefficient evaluation orders More specifically, the head of the right-hand side of each grammar rule is distinguished, and distinguished categories are scanned or predicted upon first The phrase structure rule that describes this construction is Though a head-driven generator must generate first the head of the rule, nothing prescribes the order of generation of the complements of the head Clearly then, the order of evaluation of the complements in a rule can profoundly influence the efficiency of generation, and an efficient head-driven generator must order the evaluation of the complements in a rule accordingly Structure sharing determines the dataflow within the rules of the grammar The dataflow analysis is used to determine the relative efficiency of a particular evaluation order of the right-hand side categories in a phrase structure rule by computing the maximal degree of nondeterminacy introduced by the evaluation of each of these categories The relative efficiency of this evaluation leads our compiler to as the optimal evaluation order of our phrase structure rule for argument composition The optimal evaluation order for a phrase structure rule need not necessarily be head-first Our dataflow analysis treats heads and complements alike, and includes the head in the calculation of the optimal evaluation order of a rule If the evaluation of the head of a rule introduces much nondeterminacy or provides insufficient restricting information for the evaluation of its complements, our dataflow analysis might not select the head as the first category to be evaluated, and choose instead as the optimal evaluation order Empty or displaced heads pose us no problem, since the optimal evaluation order of the right-hand side of a rule is determined regardless of the head Our Earley generator and the described compiler for off-line grammar optimization have been extensively tested with a large HPSG grammar