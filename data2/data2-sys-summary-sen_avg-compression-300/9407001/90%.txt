 Well-typed unification of two feature structures is implemented via the constraint solving clauses mentioned above, taking into account type hierarchy and feature appropriateness (for a detailed description cf As an example take the well known Head Feature Principle of HPSG (Fig In the case of analysis, the feature structure representing the word form was transmitted to the parser For generation, X2MORF expected a feature structure as input reproducing one or more word forms The central relation is the morphology predicate, (see Fig ) mediating between lexical string, surface string (with inserted null elements the pure (denullified) surface string and the feature structure of the morphological sign A widely used approach is finite-state morphology, most notably two-level morphology (for an introduction, see  Morphotactics are easily described in terms of a feature based grammar encode finite state automata directly in the feature formalism X2MORF differs from standard two-level morphology in two important respects X2MORF uses a morph lexicon where each morph has one or more feature structures assigned The other extension concerns the two-level rules, which are supplemented with a morphological filter consisting of a feature structure X2MORF can be seen as a relation between a surface string (the word form a lexical string, and a feature structure (the interpretation of the word form  below  HPSG employs strongly typed feature structures together with principles constraining them further Well-typedness requirements restrict the space of valid feature structures (cf The second source of constraints, in order to admit only linguistically valid feature structures, are the principles of grammar PS1 allow general implicative and negative constraints in the form of conditional feature structures Besides constraints enforcing simple structure sharing (eg the Head Feature Principle given in Fig In order to integrate such complex constraints in the feature unification framework we interpret unification of typed feature structures under the restrictions of principled constraints as constraint solving in the CLP paradigm 