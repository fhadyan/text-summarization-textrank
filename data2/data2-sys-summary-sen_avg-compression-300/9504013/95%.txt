 The other 99 By itself, however, good syntactic processing may not provide much `competitive advantage' to an NLG system An NLG system could, for example, take sentence-length constraints into account when making aggregation decisions Templates, of course, also have advantages over NLG It is of course possible to build ATG systems that use both NLG and template techniques Systems that use NLG techniques for `high-level' operations such as content planning, but templates for low-level realization (eg,  NLG should also only be used when it clearly increases maintainability, text readability, or some other important attribute of the target application system I believe, by the way, that most current hybrid systems use `real NLG' in content-determination and perhaps sentence-planning, and use template techniques mainly in syntactic realization Hybrid Systems: It seems safe to predict that many fielded NLG systems, at least in the near term, will use a hybrid approach, ie, they will use both template and NLG technology Anything that makes it easier to build knowledge bases will probably make it easier to build NLG systems This is an example of conditional text Most applied NLG systems have a sentence planning module that handles aggregation, referring-expression generation, sentence formation, and lexicalization  It is straightforward, in contrast, for an NLG system to handle such phenomena