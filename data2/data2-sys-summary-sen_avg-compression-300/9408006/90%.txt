 The system interprets an extended DCG formalism to produce a robust analyser that finds parses of the input made from `islands' of terminals (corresponding to terminals consumed by successful grammar rules  These include: =1=2em lhip_success Lists successful rules, indicating island position and coverage9 otherwise As implied here, rules need not cover all of the input in order to succeed First, the `ignore' facility permits different categories of unidentified input to be distinguished Ignore rules have a similar functionality to that of normal rules Moreover, an island may itself contain input which is unaccounted for by the grammar First, we define what constitutes an acceptable LHIP grammar, second, we describe the process of converting such a grammar into Prolog code, and third, we describe the analysis of input with such a grammar one or more RHS clauses may be nominated as heads; 2 one or more RHS clauses may be marked as optional; 3 `ignore' rules may be invoked; 4 adjacency constraints may be imposed between RHS clauses; 5 a global threshold level may be set to determine the minimum fraction of spanned input that may be covered in a parse, and 6 a local threshold level may be set in a rule to override the global threshold within that rule If present, this value defines the local threshold fraction for that rule This local threshold value overrules the global threshold Only a rule defined this way can be invoked as an ignore rule in an RHS clause A rule name is a Prolog term, and only rules and terminal items may act as heads within a rule body If used in a rule body, they indicate that input is potentially ignored-the problems that ignore rules are intended to repair will not always occur, in which case the rules succeed without consuming any input There is a semantic restriction on the body of a rule which is that it must contain at least one clause which necessarily covers input (optional clauses and ignore rules do not necessarily cover input  The following is an example of a LHIP rule The chief modifications to the standard Prolog `grammar rule' format are of two types: one or more right-hand side (RHS) items may be marked as `heads and one or more RHS items may be marked as `ignorable  LHIP provides a number of ways of applying a grammar to input The simplest allows one to enumerate the possible analyses of the input with the grammar With the threshold level set to 0, all analyses possible with the grammar by deletion of input terminals can be generated