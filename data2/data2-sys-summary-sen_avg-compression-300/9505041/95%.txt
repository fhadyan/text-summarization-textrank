 100] But formal language theory still has much to offer to generative linguistics Every set of trees that is accepted in this way is the projection of a local set Language complexity provides one of the most useful measures with which to compare languages and language formalisms If one can show that the constraints defining such a set, or perhaps that any constraints in the class employed by a given formalism, can be defined within then the corresponding language or class of languages is strongly context-free Much of the value of standard language complexity classes, on the other hand, comes from results that allow one to show that a given language or class of languages is not included in a particular complexity class Let be the monadic second-order theory of G More importantly, characterization results for language complexity classes tend to be in terms of the structure of languages, and the structure of natural language, while hazy, is something that can be studied more or less directly Let S2S+CI be the monadic second-order theory of this class of structures We thus establish that this account licenses a strongly context-free language The principles we capture include basic X-bar Theory, Theta Theory, the Case Filter, Binding Theory, Control Theory and various constraints on movement, in particular the Empty Category Principle Its definition has three components Relativized Minimality theory distinguishes a number of distinct varieties of antecedent-government, one for each class of movement Thus we are able to show that the language licensed by this particular GB theory is strongly context-free Our approach to chains will work for any account of language that satisfies this principle With such extended characterizations one might establish upper bounds on the complexity of human language in general The fact that the formalization is possible, then, establishes a relatively strong language complexity result for the theory we capture We have, then, two conflicting criteria for our language Crucially, though, this is all the language includes We use lower-case for individual variables and constants, and upper-case for set variables and predicate constants That language complexity results for GB should be difficult to come by is hardly surprising If is a set of sentences in a language , we will use the notation to denote the set of trees, ie the sets of derivation trees generated by Context-Free Grammars  The proof hinges on the fact that one can translate formulae in into the language of SnS the monadic second-order theory of multiple successor functions