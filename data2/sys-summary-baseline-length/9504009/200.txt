 Typed feature structures (TFSs) serve as a means for the specification of linguistic information in current linguistic formalisms such as HPSG ( , ) or Categorial Grammar (   Generalizing first-order terms (FOTs TFSs are also used to specify logic programs and constraint systems in LOGIN ( LIFE ( ALE ( , TFS ( ) and others.  General frameworks that are completely independent of any linguistic theory can be used to specify grammars for natural languages.  Indeed, most of the above mentioned languages were used for specifying HPSG grammars.  Linguistic formalisms (in particular, HPSG) use TFSs as the basic blocks for representing linguistic data: lexical items, phrases and rules.  Usually, no mechanism for manipulating TFSs (e.g parsing algorithm) is specified.  Current approaches for processing HPSG grammars either translate the grammar to Prolog (e.g , ) or specify it as a general constraint system.  Using general solvers for a specific application, namely parsing, results in disappointing performance.  Clearly, efficient processing calls for a different method.  In section control structures are added to enable parsing.  (DFS  