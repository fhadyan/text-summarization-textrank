 Unless a keyboard user is particularly proficient, a frustrating amount of time is usually spent backtracking to pick up mis-typed or otherwise mistaken input.  Work described in this paper started from an idea of an error processor that would sit on top of an editor, detecting/correcting errors just after entry, while the user continued with further text, relieved from tedious backtracking.  Hence `co-operative' error processing.  But if a program is to catch such errors very soon after they are entered, it will have to operate with less than the complete sentence.  Work underway focuses on shallow processing: how far error detection and correction can proceed when the system purview is set to a stretch of text which does not admit complete sentential analysis.  To date, grammar checkers and other programs which deal with illformed input usually step directly from spelling considerations to a full-scale sentence parse.  However treating the sentence as a basic unit loses meaning when the `sentence' is incomplete or illformed.  The focus is on these two issues; no attempt is being made to produce a complete product . 