 We give an algorithm which is at the heart of a type diagnosis system for a higher-order concurrent constraint language, viz.  the calculus which is the underlying operational model of the programming language Oz .  The algorithm decides satisfiability of constraints containing equations and , and constraints over infinite constructor trees with free variables.  The algorithm is given fully in terms of constraint simplification.  One the one hand, this gives credit to the close relationship between type inference and constraint solving (e.g , , and many others   Its interpretation is defined by . 