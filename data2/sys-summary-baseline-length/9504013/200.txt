 There are thousands, if not millions, of application programs in everyday use that automatically generate texts; but probably fewer than ten of these programs use the linguistic and knowledge-based techniques that have been studied by the Natural-Language Generation (NLG) community.  The other 99.9% of systems use programs that simply manipulate character strings, in a way that uses little, if any, linguistic knowledge.  For lack of a better name, I will call this the `template' approach.  In order for NLG technology to make it out of the lab and into everyday fielded application systems, the NLG community will need to prove that there are at least some niches where using linguistic/AI approaches in a text-generation system provides real commercial advantages, such as reducing the effort required to build (or maintain) the system, or improving the effectiveness of the generated texts.  The topic of this paper is thus when is NLG `appropriate technology' for building ATG systems, and when should simpler approaches be used.  wins, or try vs.  Folders can contain files and other folders. 