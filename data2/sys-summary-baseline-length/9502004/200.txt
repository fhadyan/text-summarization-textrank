 Recently, there has been a lot of interest in Earley deduction with applications to parsing and generation , , , .  Earley deduction is a very attractive framwork for natural language processing because it has the following properties and applications.  Memoization and reuse of partial results Incremental processing by addition of new items Hypothetical reasoning by keeping track of dependencies between items Best-first search by means of an agenda Like Earley's algorithm, all of these approaches operate top-down (backward chaining   The interest has naturally focussed on top-down methods because they are at least to a certain degree goal-directed.  In this paper, we present a bottom-up variant of Earley deduction, which we find advantageous for the following reasons: Incrementality: Portions of an input string can be analysed as soon as they are produced (or generated as soon as the what-to-say component has decided to verbalize them even for grammars where one cannot assume that the left-corner has been predicted before it is scanned.  For these grammars data-driven bottom-up processing is more appropriate.  Earley deduction is based on grammars encoded as definite clauses. 