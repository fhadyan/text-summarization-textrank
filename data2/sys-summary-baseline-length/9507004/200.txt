 The successful treatment of morphological phenomena in some languages by means of finite state automata appears to have led to the idea that this model is the most efficient and universal way to deal with morphology computationally.  Although there exist good finite-state processors for Spanish -like , or - we think that some phenomena can be handled more elegantly using a context-free approach, particularly if the morphological component is to be included as a part of a syntax grammar.  Our model has been implemented in standard DCG using a logic programming approach instead of a plain finite-state one.  It is well-known that the so-called non-concatenative processes are the most difficult single problem that morphological processors must deal with.  Experience has shown that it is not easy for any approach.  Unification-based morphology uses suppletion (i.e.  alternative allomorphs for a lemma) and feature description as a general mechanism for handling those processes.  Two-level morphology uses instead rules that match lexical representations (lemmas) with surface representations (actual spelling forms   Moreover, every language has irregularities that can only be treated as suppletive forms, e.g.  (to love  