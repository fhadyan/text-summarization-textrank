 Current work in surface realization concentrates on the use of general, abstract algorithms that interpret declaratively defined, non-directional grammars.  It is claimed that this way, a grammar can be reused for parsing and generation, or a generator can interpret different grammars (e.g.  in machine translation   A prominent example for this type of abstract algorithm is semantic-head-driven generation [ ] that has been used with HPSG, CUG, DCG and several other formalisms.  In practice, this type of surface realization has several drawbacks.  First, many existing grammars have been developed with parsing as the primary type of processing in mind.  Adapting their semantics layer to a generation algorithm, and thus achieving reversibility, can turn out to be a difficult enterprise [   Second, many linguistically motivated grammars do not cover common means of information presentation, such as filling in a table, bulletized lists, or semi-frozen formulae used for greetings in letters.  Finally, the grammar-based logical form representation hardly serves as a suitable interface to deep generation processes.  [ and for the construction of knowledge-based expert systems (e.g. 