 verb(sleeps,3sg   np I 1sg   The corresponding Prolog term representation instantiates the representation for the sort sign further, and leaves argument positions that can be instantiated further by the subsorts of phrasal, and for the newly introduced feature daughters.  For the development of ProFIT programs and grammars, it is necessary to give input and output and debugging information in ProFIT terms, since the Prolog term representation is not very readable.  Since the output of ProFIT compilation are Prolog programs, all the techniques developed for the optimisation of logic programs (partial evaluation, tabulation, indexing, program transformation techniques etc can be applied straightforwardly to improve the performance of sorted feature grammars.  Such compilation of sorted feature terms into Prolog terms has been successfully used in the Core Language Engine (CLE) and in the Advanced Linguistic Engineering Platform (ALEP .  A ProFIT program consists of: Declarations for sorts Declarations for features Declarations for templates Declarations for finite domains Definite clauses In addition to unsorted Prolog terms, ProFIT allows sorted feature terms, for which the sorts and features must be declared in advance. 