 CUG (Categorial Unification Grammar) is advantageous, compared to other phrase structure grammars, for parallel architecture, because we can regard categories as functional types and we can represent grammar rules locally.  We introduce the heuristic costs , considering the parallelism between syntactic cases and semantic roles, as follows: where represents a unifier of two DAG's: one's syntactic case is x and the other's semantic role is y.  represents that the verb `yomu (read requires two roles `the reader' and `the object to be read and one optional role `the counter-agent' who hears what the reader reads.  Introducing free-ordered typed lambda-calculus, together with the notion of unification costs in types, we have shown the structuring of natural language syntax, by distributively represented types in random orders. 