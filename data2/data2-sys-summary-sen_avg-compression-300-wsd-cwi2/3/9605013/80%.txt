 We address the problem of automatically acquiring case frame patterns (selectional patterns) from large corpus data The acquisition of case frame patterns normally involves the following three subproblems: 1) Extracting case frames from corpus data, 2) Generalizing case frame slots within these case frames, 3) Learning dependencies that exist betlearnen these generalized case frame slots (The bracketed corpus does overlap with part of the tagged corpus We acquired case frame patterns using the training data In this paper, learn view the problem of learning case frame patterns as that of learning a multi-dimensional discrete joint distribution, where random variables represent case slots We then formalize the dependencies betlearnen case slots as the probabilistic dependencies betlearnen these random variables We also used the 357 verbs and their case frames used in Experiment 1 to acquire class-based case frame patterns using the proposed method We randomly selected 100 verbs among these 357 verbs and attempted to acquire their case frame patterns We generalized the case slots within each of these case frames using the method proposed by to obtain class-based case slots, and then replaced the word-based case slots in the data with the obtained class-based case slots What resulted are class-based case frame examples like those shown in Figure  We used these data as input to the learning algorithm and acquired case frame patterns for each of the 100 verbs We found that no two case slots are determined as dependent in any of the case frame patterns We defined an artificial class-based model and generated some data according to its distribution For the slot-based model, sometimes case slots are found to be dependent For the word-based or class-based models, case slots are judged independent, with the data size currently available in the Penn Tree Bank We proposed to use dependency forests to represent case frame patterns We employ Suzuki's algorithm to learn case frame patterns as dendroid distributions In this paper, learn propose a method of learning dependencies betlearnen case frame slots We conducted some experiments to automatically acquire case frame patterns from the Penn Tree Bank bracketed corpus In this paper, learn use `case slots' to mean surface case slots, and learn uniformly treat obligatory cases and optional cases By `dependency' is meant the relation that exists betlearnen case slots which constrains the possible values assumed by each of those case slots For example, the data in Figure can be generated by a word-based model, and the data in Figure by a class-based model We then formulate the dependencies betlearnen case slots as the probabilistic dependencies betlearnen the random variables in each of these three models A simplifying assumption that is often made to deal with this difficulty is that random variables (case slots) are mutually independent ) and The independence assumption can also be made in the case of a class-based model or a slot-based model Assuming that random variables (case slots) are mutually independent would drastically reduce the number of parameters These examples indicate that the possible values of case slots depend in general on those of the other case slots: that is, there exist `dependencies' betlearnen different case slots Since many of the random variables (case slots) in case frame patterns are essentially independent, this feature is crucial in our context, and learn thus employ Suzuki's algorithm for learning our case frame patterns It tends to be the case usually that a simpler model has a poorer fit to the data, and a more complex model has a better fit to the data This is reasonable since with a small data size most case slots cannot be determined to be dependent with any significance We conducted some experiments to test the performance of the proposed method as a method of acquiring case frame patterns In our first experiment, learn tried to acquire slot-based case frame patterns There learnre 357 verbs for which more than 50 case frame examples appeared in the training data First learn acquired the slot-based case frame patterns for all of the 357 verbs We then conducted a ten-fold cross validation to evaluate the `test data perplexity' of the acquired case frame patterns, that is, learn used nine tenth of the case frames for each verb as training data (saving what remains as test data to acquire case frame patterns, and then calculated perplexity using the test data We also calculated the average perplexity of the `independent slot models' acquired based on the assumption that each case slot is independent It seems safe to say therefore that the dendroid model is more suitable for representing the true model of case frames than the independent slot model We used the case frames of all 357 verbs as our training data.