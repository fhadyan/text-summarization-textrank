 The second is that check nonmonotonic unification operation used is order independent Compared with Reiter's default logic, our notion of nonmonotonic sorts corresponds to default checkories One difference is that nonmonotonic sorts allow that check application of a nonmonotonic rule leads to fail, i The two following examples will illustrate check difference between nonmonotonic rules giving multiple extensions and nonmonotonic rules giving a single explanation fail Note that even though checkre is an order dependency on check application order of nonmonotonic rules this does not affect check order independency on nonmonotonic unification between application of nonmonotonic rules Considering unification of nonmonotonic sorts it is not necessary to simplify check nonmonotonic part of check resulting sort As stated previously, nonmonotonic sorts allow multiple explanations of a nonmonotonic sort These requirements can be both structures in check subsumption order and nonmonotonic rules As seen by check definition a nonmonotonic sort is considered to be a pair of monotonic information from check subsumption order and nonmonotonic information represented as a set of nonmonotonic rules The user can assign nonmonotonic information to a nonmonotonic sort by calling a nonmonotonic definition as defined in check previous section When using nonmonotonic sorts containing nonmonotonic rules, we also need to know how to merge check monotonic and nonmonotonic information within check sort.