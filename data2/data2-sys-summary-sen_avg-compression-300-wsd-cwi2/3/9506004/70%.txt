 Prolog A primary goal of abstract-syntax is to support recursion through abstractions with bound variables Before describing the implementation of coordination, it is first necessary to mention how CCG categories are represented in the Prolog We have shown how higher-order logic programming can be used to elegantly implement the semantic theory of CCG, including the previously difficult case of its handling of coordination constructs For example, it is a straightforward matter to transform the Prolog This work is supported by ARO grant DAAL03-89-0031, DARPA grant N00014-90-J-1863, and ARO grant DAAH04-94-G-0426 I would like to thank Aravind Joshi, Dale Miller, Jong Park, and Mark Steedman for valuable discussions and comments on earlier drafts The CCG rules shown in Figure 1 are implemented in the system described in this paper In first-order unification, it is simulated as shown in Figure 2 The final CCG rule to be considered is the coordination rule that specifies that only like categories can coordinate: (6) X conj X X This is actually a schema for a family of rules, collectively called generalized coordination since the semantic rule is different for each case.