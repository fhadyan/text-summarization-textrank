 Therefore, any use of a feature structure to describe an object demands that the feature structure can be interpreted as true or false of the object However, I insert morphs between feature structures and objects to yield an interpretation free characterisation of a satisfiable feature structure ] ] ] ] A feature structure approximates a morph iff the Moshier abstraction of the feature structure abstractly subsumes (see [ the morph I then use this interpretation to define the notion of a satisfiable feature structure ] Though theorem gives an interpretation free characterisation of a satisfiable feature structure, the characterisation still seems to admit of no effective algorithm to decide if a feature structure is satisfiable However, I use theorem and resolved feature structures to yield a less general interpretation free characterisation of a satisfiable feature structure that admits of such an algorithm [ Definition R is a resolved feature structure iff [ R is a feature structure , is a total function from Q to , and for each and each , [ [ if is defined then is defined, and  ] ] ] ] Each resolved feature structure is a well-typed (see [ feature structure with output alphabet  Though no feature structure algebra provides descriptions as expressive as those provided by a feature logic, using feature structures to describe objects profits from a large stock of available computational techniques to represent, test and process feature structures In fact, Troll represents each feature structure as a disjunction of the resolvants of the feature structure Loosely speaking, the resolvants of a feature structure have the same underlying finite state automaton as the feature structure, and differ only in their output function Troll exploits this property to represent each feature structure as a finite state automaton and a set of output functions.