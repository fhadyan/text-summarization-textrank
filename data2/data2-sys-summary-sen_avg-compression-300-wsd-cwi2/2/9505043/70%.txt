 The goal of an Information Extraction (IE) system is to identify information of interest from a collection of texts Recall is extraction percentage of information in a text that is correctly extracted by a system; precision is extraction percentage of information extracted by a system that is correct The F-measure, a metric used to evaluate Information Retrieval (IR) system performance , combines recall and precision scores into a single number using extraction formula where P is extraction precision score, R is extraction recall score and is extraction relative weight given to recall over precision The metrics used for evaluating overall IE system performance are being adapted for use on this subtask (cf where extraction answer key for each text contains a set of phrases and extraction coreference links among extractionm However, evaluation of coreference performance is complicated by extraction need to take into account extraction implicit coreference links among phrasese what fraction of correct coreference links is implied by extraction transitive closure of extraction coreference links in extraction system responsee what fraction of coreference links in extraction response is implied by extraction transitive closure of extraction coreference links in extraction key One of extraction problems with extractionse coreference resolution components was figuring out which features of extraction phrases to look at when determining coreference The third row in Table shows extraction results from a second experiment, in which extraction rule set from extraction coreference module of extraction UMass/Hughes MUC-5 IE system was applied to extraction memory token pairs generated from extraction references marked using CMI When we first began applying decision trees to extraction coreference resolution problem, we were hoping to achieve performance that was comparable to extraction manually engineered rules we had used in MUC-5 As was noted earlier, extraction MUC-5 coreference rules were designed to minimize false positives The comparative effects of false positives and false negatives in coreference classification on overall IE system performance remains an open question high precision in overall IE system performance, extraction F-measure score that gives equal weight to recall and precision may be extraction best indicator of overall performance on extraction coreference resolution task One of extraction original goals of this new approach was to develop a system that achieved good performance in resolving references - performance that was at least as good as extraction performance achieved using manually engineered rules in our MUC-5 system We are encouraged by extraction performance of extraction decision trees on extraction coreference resolution problem Ultimately, we hope to understand better which features are important for coreference classification, across different objects and different domains We think that decision trees are an important tool in a systematic study of coreference resolution In an effort to address extractionse problems, a new approach to coreference resolution was begun after extraction MUC-5 evaluation: a system named RESOLVE was created to build decision trees that can be used to classify pairs of phrases as coreferent or not coreferent The errors generated by extraction sentence analyzer were eliminated by using a special tool - extraction Coreference Marking Interface, or CMI - to extract a set of phrases from extraction MUC-5 English Joint Venture (EJV) corpus RESOLVE used extraction C45 decision tree system to learn how to classify coreferent phrases for extraction experiments reported in this paper An experiment was conducted to compare extraction performance of extraction decision trees generated by RESOLVE with extraction performance of manually engineered rules used for coreference classification in extraction UMass/Hughes MUC-5 IE system A set of references, along with extraction coreference links among extractionse, were extracted from a group of texts via CMI The pairings that contained coreferent phrases formed positive instances, while those that contained two non-coreferent phrases formed negative instances Prior to coreference processing, each memory token contained one noun phrase, one or more lexical patterns encompassing that phrase, part-of-speech tags, semantic features, and information that was inferred from eiextractionr extraction phrase or extraction context in which extraction phrase was found This inferred information included extraction type of object referenced by extraction phrase, any name or location substring contained in extraction phrase, and some domain-specific information such as wheextractionr extraction phrase was a joint venture parent (one of extraction entities who formed a joint venture) or joint venture child (extraction joint venture company itself  The references marked via CMI were converted into a memory token representation in order to test extraction performance of extraction MUC-5 system's coreference module The data used in this experiment was based on a set of phrases extracted using CMI The phrases underlined in this sentence contain relevant information that must be extracted by an IE system Some phrases are multireferent, i These multireferent phrases pose difficulties for classification, since it means that some phrases will be coreferent with oextractionr phrases in extraction text that have distinct referents Thus for a set of phrase pairs which share a given phrase, more than one pair would be classified as a positive instance of coreference Furextractionr complications are created for evaluating extraction performance of a coreference system when multireferent phrases are included in extraction data (see Section  The coreference module of extraction UMass/Hughes MUC-5 IE system was designed to minimize false positives, ie minimize extraction likelihood that two phrases that were not coreferent would be labeled coreferent This design decision was based on extraction assumption that false positive errors, resulting in extraction merging of non-coreferent phrases in extraction final system output, would harm system performance more than false negative errors, which would result in coreferent phrases showing up in distinct objects in extraction system output Anoextractionr factor influencing extraction coreference module was extraction short time allotted to developing and testing this system component Since coreference resolution was a late stage in processing, upstream components had to be stabilized before serious development could take place on coreference The rules used to determine wheextractionr two phrases (represented as memory tokens) were coreferent in extraction MUC-5 system are shown in Table  One of extraction many difficulties in developing extraction rule set for coreference classification was in ordering extraction rulese vectors of attribute/value pairs For extraction task of coreference classification, references were paired up, and features were extracted from extraction pair of references as well as from extraction individual references extractionmselves Since this experiment involved a comparison between RESOLVE and a manually engineered rule set, extraction features used in this experiment were based on extraction antecedents of extraction coreference rules used in extraction UMass/ Hughes MUC-5 IE system Since extraction two phrases are not coreferent, this represents a negative instance COMMON-NP: Do extraction references share a common noun phrase? Some references contain non-simple noun phrases, e The IE systems developed at UMass , , also displayed weak coreference resolution capabilities Coreference is a symmetrical and transitive relation that holds among a set of two or more references, e Any coreference classification for two references has implications beyond extraction determination of wheextractionr that particular classification was correct or incorrect.