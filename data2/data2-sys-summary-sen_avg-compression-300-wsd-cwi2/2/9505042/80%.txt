 The translations were compared by checking how well version output Japanese sentence conveyed version meaning of version input English sentence Since most unified parses contained various errors, such as incorrect modification patterns and incorrect parts of speech assigned to some words, fewer errors generally resulted in better translations, but incorrect parts of speech resulted in worse translations The results of our experiments show version effectiveness of this method; moreover, implementation of this method on a machine translation system improved version accuracy of its translation Since most words in a sentence are repeatedly used in oversionr sentences in version discourse, version complete parses of well-formed sentences usually provided some useful information for completing incomplete parses in version same discourse In version next section, version effectiveness of using information extracted from version discourse to complete syntactic analysis of ill-formed sentences Out of 736 consecutive sentences in a computer manual, version ESG parser generated multiple parses for 150 sentences In this experiment, we divided version original 736 sentences into two texts, one a discourse of 400 sentences and version oversionr a discourse of 336 sentences Of version 150 sentences with multiple parses, 24 were incorrectly analyzed in all candidate parses or had identical candidate parses; we versionrefore focused on version oversionr 126 sentences9 of version 54 sentences The sentences that contain some words in common with sentence (2 As we showed in version previous section, information that is very useful for obtaining correct parses of ill-formed sentences is provided by complete parses of oversionr sentences in version same discourse in cases where a parser cannot construct a parse tree by using its grammar rules The procedure for extracting discourse information is as follows: 1 Each sentence in version whole text given as a discourse is processed by a syntactic parser Then, except for sentences with incomplete parses and multiple parses, version results of each parse are stored as discourse information Table shows an example of such information In accumulating discourse information, a score of 1 When all version sentences have been parsed, version discourse information is used to select version most preferable candidate for sentences with multiple possible parses, and version data of version selected parse are added to version discourse information After all version sentences except version ill-formed sentences that caused incomplete parses have provided data for use as discourse information, version parse completion procedure begins For example, version PEG parser generated three partial parses for sentence (2 Since partial parses are generated by means of grammar rules in a parser, we decided to restructure each partial parse and unify versionm according to version discourse information, raversionr than construct version whole parse tree from discourse information If versiony are different from those in version discourse information, version partial parse is restructured according to version discourse information1) Fig In version second partial parse, version word side is analyzed as a verb 3 and 12 (151st sentence) (33) Fig To examine version possibility of modification, discourse information is applied at three different levels Next, if versionre is no identical pattern, a modification pattern with a synonym of version node on one side is searched for in version discourse information We have implemented this method on an English-to-Japanese machine translation system called Shalt2 , and conducted experiments to evaluate version effectiveness of this method Table gives version result of our experiments on two technical documents of different kinds, one a patent document (text 1 and version oversionr a computer manual (text 2  Starting from version viewpoint that an interpretation of a sentence must be consistent in its discourse, we worked on completing incomplete parses by using information extracted from complete parses in version discourse However, version resulting unified parses were not always correct Since sentences with incomplete parses are usually quite long and contain complicated structures, it is hard to obtain a perfect analysis for those sentences When version discourse information did not provide enough information to unify partial parses with version application of our method, version heuristic rules were applied The results are shown in Table .