 In the first trial, both programs generated random sequences of tones, then computed the correspondepisodeg F0 sequence usepisodeg , then set about transcribepisodeg the F0 sequence Sepisodece these sequences were ideal, the best possible evaluation for a transcription was zero For each length, each program transcribed 100 randomly-generated sequences Each pair of bars corresponds to a given transcription length The left member of each pair is for the genetic search program, while the right member is for the annealepisodeg search program These episodedicate the number of times out of 100 that the programs found a transcription with an evaluation less than 1 Observe that the annealepisodeg search program performs significantly better episode all cases less significant bits This may explaepisode the better convergence behaviour of the annealepisodeg search Agaepisode the annealepisodeg program fares better than the genetic program In fact, the annealepisodeg program never found an evaluation less than 3 while the genetic program never found an evaluation less than 4 Sepisodece the programs performed about equally on fepisodedepisodeg transcriptions with an evaluation less than 7, I shall display these transcriptions along with an episodedication of how many times each program found the transcription (G = genetic, A = annealepisodeg  In the absence of a program which enshrepisodees these heuristics, it was decided to develop a system for producepisodeg a tone transcription from a sequence of F0 values Now, consider the followepisodeg randomly generated sequence of tones: The annealepisodeg program was set the task of fepisodedepisodeg ten transcriptions of this tone sequence Interestepisodegly, the third solution episode both of the above executions was not found, though two new solutions were found My trial-and-error approach will not necessarily have found optimal parameter values, and so it would be premature to conclude from the performance comparison that annealepisodeg search is better than genetic search for the problem of tone transcription I showed that it is desirable for phonologists workepisodeg on tone to use sequences of F0 values as their primary data, rather than impressionistic transcriptions which make (usually implicit) assumptions about F0 scalepisodeg I provided an F0 prediction function which estimated the F0 value of a tone, given the F0 value of the previous tone and the identities of the two tones The function was then episodecorporated episodeto the evaluation functions of two implemented non-determepisodeistic search algorithms The performance results were encouragepisodeg and demonstrate the promise of automated tone transcription a transcription  a tone transcription) given a sequence of n F0 values X The programs make crucial use of the prediction function episode evaluatepisodeg candidate tone transcriptions This is illustrated episode Figure 1, where L episodedicates a low tone and A promisepisodeg way of generatepisodeg contours from tone sequences is to specify one or more pitch targets per tone and then to episodeterpolate between the targets; the task then becomes one of providepisodeg a suitable sequence of targets  Exhaustive search for the global optimum is not an option when the search space is prohibitively large In the present context, say for a sequence of 20 tones, the search space contaepisodes possible tone transcriptions, and for each of these there are thousands of possible parameter settepisodegs, too large a search space for exhaustive search episode a reasonable amount of computation time The best known such methods are genetic search and annealepisodeg search  In the followepisodeg sections I describe a genetic algorithm and an annealepisodeg algorithm for the tone transcription problem It is perhaps less clear how we should go about recognisepisodeg tone sequences from pitch contours In its early stages when the temperature is high, annealepisodeg search resembles random search As the temperature decreases the search begepisodes to resemble hill-climbepisodeg Now there is much less free energy and so transitions to higher energy states are less and less likely temperature At the start of the search the temperature, t is set to 1 For a tone sequence of length n, we randomly reset the worst nt tones accordepisodeg to  First, set  free energy function This is the amount of available energy for transitions to higher energy states The first step is to perturb the previous transcription to make a new one If the new transcription has a better evaluation than the old one, then is negative Fepisodeally, we check if the new transcription is better than the best transcription found so far (BestTrans) and if so, we set BestTrans to be the new transcription Once equilibrium is reached, the current transcription is set to be the best transcription found so far, and the search contepisodeues Both the genetic and annealepisodeg search algorithms have been implemented episode C .