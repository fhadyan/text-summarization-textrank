 Instead of generating four separate messages as in Fig The ontologizer adds hierarchical structure to messages to facilitate further processing This includes combining atomic messages into aggregated messages, choosing cue words, and determining paraphrases that maintain focus and ensure coherence Because PLANDoc can produce many paraphrases for a single message, aggregation during the syntactic phase of generation would be difficult; semantically similar messages would already have different surface forms The first aggregation step is to identify semantically related messages This is done by grouping messages with the same action attribute Though this heuristic disallows the combination of messages with different actions, the messages in each action group already contain enough information to produce quite complex sentences The system combines the maximum number of related messages to meet the second design criterion-generating the most concise text Sorting: putting similar messages right next to each other Merging Same Attribute: combining adjacent messages that only have one distinct attribute Identity Deletion: deletion of identical components across messages Sentence Breaking: determining sentence breaks The system first ranks the attributes to determine which are most similar across messages with the same action The rank is an indicator of how similar an attribute is across the messages Combining messages according to the highest ranking attribute ensures that minimum text will be generated for these messages Based on the ranking, the system reorders the messages by sorting, which puts the messages that have the same attribute right next to each other In Fig Attribute class and action (Fig Because the final sorting operation dominates the order of the resulting messages, PLANDoc sorts the message list from the lowest rank attribute to the highest The list of sorted messages is traversed Whenever there is only one distinct attribute between two adjacent messages, they are merged into one message with a conjoined attribute, which is a list of the distinct attributes from both messages What about messages with two or more distinct attributes? Merging two messages with two or more distinct attributes will result in a syntactically valid sentence but with an undesirable meaning: This refinement activated ALL-DLC and DSS-DLC for CSAs 3122 and 3130 in the third quarter of 1993 By tracking which attribute is compound, a third message can be merged into the aggregate message if it also has the same distinct attribute PLANDoc uses a heuristic that always joins the first and second messages, and continues to do so for third and more if the distinct attributes between the messages are the same Once the distinct attributes are different from the combined messages, the system starts a new sentence They are combined because they are the first two messages Aggregating all three messages together will results in questionable output Because of the parallel structure created between the first 2 messages, readers are expecting a different date when reading the third clause Input to PLANDoc is a series of messages, or semantic functional descriptions (FD, Fig.