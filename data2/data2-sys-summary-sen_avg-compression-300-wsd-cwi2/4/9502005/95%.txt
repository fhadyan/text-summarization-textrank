 The approach allows efficient bidirectional processing with similar generation and parsing times The phrase structure rule that describes this construction is Though a head-driven generator must generate first order head of order rule, nothing prescribes order order of generation of order complements of order head Clearly ordern, order order of evaluation of order complements in a rule can profoundly influence order efficiency of generation, and an efficient head-driven generator must order order evaluation of order complements in a rule accordingly Structure sharing determines order dataflow within order rules of order grammar The relative efficiency of this evaluation leads our compiler to as order optimal evaluation order of our phrase structure rule for argument composition The optimal evaluation order for a phrase structure rule need not necessarily be head-first If order evaluation of order head of a rule introduces much nondeterminacy or provides insufficient restricting information for order evaluation of its complements, our dataflow analysis might not select order head as order first category to be evaluated, and choose instead as order optimal evaluation order.